const levels = [
    // 1-5: Printing & Variables
    {
      id: 1,
      title: "Magic Print Spell",
      world: "üèùÔ∏è Beginner Island",
      difficulty: "‚≠ê",
      type: "fill_blank",
      question: "Complete the magic spell to print 'Hello World'",
      template: "___('Hello World')",
      answer: "print",
      expectedOutput: "Hello World",
      hint: "The magic word starts with 'p' and makes text appear!",
      points: 100,
      xpReward: 25,
      coins: 15,
      timeLimit: 45
    },
    {
      id: 2,
      title: "Store Hero Name",
      world: "üèùÔ∏è Beginner Island",
      difficulty: "‚≠ê",
      type: "fill_blank",
      question: "Create a variable called 'name' to store your hero‚Äôs title.",
      template: "___ = 'Wizard'\\nprint(___)",
      answer: "name",
      expectedOutput: "Wizard",
      hint: "Use the word 'name' as your variable to keep it simple.",
      points: 120,
      xpReward: 30,
      coins: 20,
      timeLimit: 50
    },
    {
      id: 3,
      title: "Print Number",
      world: "üèùÔ∏è Beginner Island",
      difficulty: "‚≠ê",
      type: "fill_blank",
      question: "Print the number 42.",
      template: "print(___)",
      answer: "42",
      expectedOutput: "42",
      hint: "Numbers do not need quotes.",
      points: 100,
      xpReward: 20,
      coins: 10,
      timeLimit: 40
    },
    {
      id: 4,
      title: "Input Name",
      world: "üèùÔ∏è Beginner Island",
      difficulty: "‚≠ê",
      type: "fill_blank",
      question: "Take input from the user and print it.",
      template: "name = ___('Enter your name: ')\\nprint(name)",
      answer: "input",
      expectedOutput: "Whatever the user types",
      hint: "Use input() to read user input.",
      points: 140,
      xpReward: 36,
      coins: 24,
      timeLimit: 55
    },
    {
      id: 5,
      title: "Variable Reassign",
      world: "üèùÔ∏è Beginner Island",
      difficulty: "‚≠ê",
      type: "fill_blank",
      question: "Change x from 5 to 10.",
      template: "x = 5\\nx = ___\\nprint(x)",
      answer: "10",
      expectedOutput: "10",
      hint: "Just assign a new value.",
      points: 120,
      xpReward: 28,
      coins: 18,
      timeLimit: 50
    },

    // 6-10: Arithmetic Operators
    {
      id: 6,
      title: "Add Numbers",
      world: "üèùÔ∏è Beginner Island",
      difficulty: "‚≠ê",
      type: "fill_blank",
      question: "Add 7 and 3.",
      template: "result = 7 ___ 3\\nprint(result)",
      answer: "+",
      expectedOutput: "10",
      hint: "Use + for addition.",
      points: 110,
      xpReward: 25,
      coins: 15,
      timeLimit: 40
    },
    {
      id: 7,
      title: "Subtract Numbers",
      world: "üèùÔ∏è Beginner Island",
      difficulty: "‚≠ê",
      type: "fill_blank",
      question: "Subtract 5 from 12.",
      template: "result = 12 ___ 5\\nprint(result)",
      answer: "-",
      expectedOutput: "7",
      hint: "Use - for subtraction.",
      points: 110,
      xpReward: 25,
      coins: 15,
      timeLimit: 40
    },
    {
      id: 8,
      title: "Multiply Numbers",
      world: "üèùÔ∏è Beginner Island",
      difficulty: "‚≠ê",
      type: "fill_blank",
      question: "Multiply 6 by 4.",
      template: "result = 6 ___ 4\\nprint(result)",
      answer: "*",
      expectedOutput: "24",
      hint: "Use * for multiplication.",
      points: 115,
      xpReward: 26,
      coins: 16,
      timeLimit: 45
    },
    {
      id: 9,
      title: "Divide Numbers",
      world: "üèùÔ∏è Beginner Island",
      difficulty: "‚≠ê",
      type: "fill_blank",
      question: "Divide 20 by 4.",
      template: "result = 20 ___ 4\\nprint(result)",
      answer: "/",
      expectedOutput: "5.0",
      hint: "Use / for division.",
      points: 120,
      xpReward: 28,
      coins: 18,
      timeLimit: 45
    },
    {
      id: 10,
      title: "Modulus",
      world: "üèùÔ∏è Beginner Island",
      difficulty: "‚≠ê",
      type: "fill_blank",
      question: "Get the remainder of 10 divided by 3.",
      template: "result = 10 ___ 3\\nprint(result)",
      answer: "%",
      expectedOutput: "1",
      hint: "Use % to find the remainder.",
      points: 125,
      xpReward: 30,
      coins: 20,
      timeLimit: 45
    },

    // 11-15: Strings and concatenation
    {
      id: 11,
      title: "String Join",
      world: "üíé Crystal Caves",
      difficulty: "‚≠ê‚≠ê",
      type: "fill_blank",
      question: "Join 'Hello' and 'World'.",
      template: "result = 'Hello' ___ 'World'\\nprint(result)",
      answer: "+",
      expectedOutput: "HelloWorld",
      hint: "Use + to join strings.",
      points: 145,
      xpReward: 38,
      coins: 25,
      timeLimit: 55
    },
    {
      id: 12,
      title: "MCQ: String Uppercase",
      world: "üíé Crystal Caves",
      difficulty: "‚≠ê‚≠ê",
      type: "multiple_choice",
      question: "Which method converts 'python' to uppercase?",
      options: [
        "word.upper()",
        "word.upcase()",
        "word.toUpper()",
        "word.capitalize()"
      ],
      correctIndex: 0,
      expectedOutput: "PYTHON",
      hint: "In Python, the method to convert letters to uppercase is short and simple.",
      points: 150,
      xpReward: 40,
      coins: 26,
      timeLimit: 60
    },
    {
      id: 13,
      title: "MCQ: String Slice",
      world: "üíé Crystal Caves",
      difficulty: "‚≠ê‚≠ê",
      type: "multiple_choice",
      question: "How do you get the first 3 letters of 'Python'?",
      options: [
        "word[0:3]",
        "word[:3]",
        "word[0-3]",
        "word[1:4]"
      ],
      correctIndex: 0,
      expectedOutput: "Pyt",
      hint: "Use slicing with start:end format, indexing starts at 0.",
      points: 155,
      xpReward: 42,
      coins: 27,
      timeLimit: 60
    },
    {
      id: 14,
      title: "MCQ: List Creation",
      world: "üíé Crystal Caves",
      difficulty: "‚≠ê‚≠ê",
      type: "multiple_choice",
      question: "Which creates a list of numbers 1, 2, 3?",
      options: [
        "nums = [1, 2, 3]",
        "nums = (1, 2, 3)",
        "nums = 1, 2, 3",
        "nums = {1:2:3}"
      ],
      correctIndex: 0,
      expectedOutput: "[1, 2, 3]",
      hint: "Lists use square brackets.",
      points: 160,
      xpReward: 44,
      coins: 28,
      timeLimit: 60
    },
    {
      id: 15,
      title: "MCQ: Access List",
      world: "üíé Crystal Caves",
      difficulty: "‚≠ê‚≠ê",
      type: "multiple_choice",
      question: "Print second item of [5,10,15]:",
      options: [
        "nums[0]",
        "nums[1]",
        "nums[2]",
        "nums[3]"
      ],
      correctIndex: 1,
      expectedOutput: "10",
      hint: "Indexing starts at 0.",
      points: 165,
      xpReward: 46,
      coins: 29,
      timeLimit: 60
    },

    // 16-20: Loops
    {
      id: 16,
      title: "List Append",
      world: "üíé Crystal Caves",
      difficulty: "‚≠ê‚≠ê",
      type: "fill_blank",
      question: "Add 4 to list [1,2,3].",
      template: "nums = [1, 2, 3]\\nnums.___(4)\\nprint(nums)",
      answer: "append",
      expectedOutput: "[1, 2, 3, 4]",
      hint: "Use append() to add items.",
      points: 170,
      xpReward: 48,
      coins: 30,
      timeLimit: 65
    },
    {
      id: 17,
      title: "MCQ: For Loop",
      world: "üêâ Dragon's Lair",
      difficulty: "‚≠ê‚≠ê‚≠ê",
      type: "multiple_choice",
      question: "Print numbers 0-4?",
      options: [
        "for i in range(5): print(i)",
        "for i in 5: print(i)",
        "for i to 5: print(i)",
        "loop i in range(5): print(i)"
      ],
      correctIndex: 0,
      expectedOutput: "0 1 2 3 4",
      hint: "Use range() for sequences.",
      points: 175,
      xpReward: 50,
      coins: 32,
      timeLimit: 70
    },
    {
      id: 18,
      title: "While Loop",
      world: "üêâ Dragon's Lair",
      difficulty: "‚≠ê‚≠ê‚≠ê",
      type: "fill_blank",
      question: "Repeat until count reaches 3.",
      template: "count = 0\\n___ count < 3:\\n    print(count)\\n    count += 1",
      answer: "while",
      expectedOutput: "0\\n1\\n2",
      hint: "Use while for repeating until a condition is false.",
      points: 180,
      xpReward: 52,
      coins: 34,
      timeLimit: 70
    },
    {
      id: 19,
      title: "MCQ: If Statement",
      world: "üêâ Dragon's Lair",
      difficulty: "‚≠ê‚≠ê‚≠ê",
      type: "multiple_choice",
      question: "Print 'Big' if x>5. Which is correct?",
      options: [
        "if x > 5 print('Big')",
        "if x > 5: print('Big')",
        "if x > 5 then print('Big')",
        "if x > 5 -> print('Big')"
      ],
      correctIndex: 1,
      expectedOutput: "Big",
      hint: "Use colon after the condition.",
      points: 185,
      xpReward: 54,
      coins: 35,
      timeLimit: 75
    },
    {
      id: 20,
      title: "MCQ: If Else",
      world: "üêâ Dragon's Lair",
      difficulty: "‚≠ê‚≠ê‚≠ê",
      type: "multiple_choice",
      question: "Which code correctly prints 'Even' if number % 2 == 0, else prints 'Odd'?",
      options: [
        "if number % 2 == 0:\n    print('Even')\nelse:\n    print('Odd')",
        "if number % 2 == 0: print('Even') else: print('Odd')",
        "if number % 2 == 0 then: print('Even') else: print('Odd')",
        "if number % 2 == 0: print('Even') otherwise: print('Odd')"
      ],
      correctIndex: 0,
      expectedOutput: "Even  // if number is divisible by 2\nOdd   // if number is not divisible by 2",
      hint: "In Python, else must be on a new line after the if block.",
      points: 190,
      xpReward: 56,
      coins: 36,
      timeLimit: 75
    },


    // 21-25: Logic & Functions
    {
      id: 21,
      title: "Logical AND",
      world: "üå≤ Magic Forest",
      difficulty: "‚≠ê‚≠ê‚≠ê‚≠ê",
      type: "fill_blank",
      question: "Check if age >=18 AND has_id is True.",
      template: "if age >= 18 ___ has_id:\\n    print('Access granted')",
      answer: "and",
      expectedOutput: "Access granted",
      hint: "Use 'and' to combine conditions.",
      points: 195,
      xpReward: 58,
      coins: 37,
      timeLimit: 80
    },
    {
      id: 22,
      title: "Logical OR",
      world: "üå≤ Magic Forest",
      difficulty: "‚≠ê‚≠ê‚≠ê‚≠ê",
      type: "fill_blank",
      question: "Check if x==0 OR y==0.",
      template: "if x == 0 ___ y == 0:\\n    print('Zero found')",
      answer: "or",
      expectedOutput: "Zero found",
      hint: "Use 'or' if any condition can be True.",
      points: 200,
      xpReward: 60,
      coins: 38,
      timeLimit: 80
    },
    {
      id: 23,
      title: "Not Operator",
      world: "üå≤ Magic Forest",
      difficulty: "‚≠ê‚≠ê‚≠ê‚≠ê",
      type: "fill_blank",
      question: "Check if is_raining is False.",
      template: "if ___ is_raining:\\n    print('No rain')",
      answer: "not",
      expectedOutput: "No rain",
      hint: "Use not to flip True/False.",
      points: 205,
      xpReward: 62,
      coins: 39,
      timeLimit: 80
    },
    {
      id: 24,
      title: "Define Function",
      world: "üå≤ Magic Forest",
      difficulty: "‚≠ê‚≠ê‚≠ê‚≠ê",
      type: "fill_blank",
      question: "Define a function greet with parameter name.",
      template: "___ greet(name):\\n    print('Hello', name)",
      answer: "def",
      expectedOutput: "Hello <name>",
      hint: "Functions start with def.",
      points: 210,
      xpReward: 64,
      coins: 40,
      timeLimit: 85
    },
    {
      id: 25,
      title: "MCQ: Function Call",
      world: "‚òÅÔ∏è Sky Temple",
      difficulty: "‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê",
      type: "multiple_choice",
      question: "Which calls greet('Alice') correctly?",
      options: [
        "greet('Alice')",
        "call greet('Alice')",
        "greet = 'Alice'",
        "def greet('Alice')"
      ],
      correctIndex: 0,
      expectedOutput: "Hello Alice",
      hint: "Use the function name followed by parentheses to call it.",
      points: 215,
      xpReward: 66,
      coins: 41,
      timeLimit: 85
    },
    // 26-30: Modules, Comments, Misc Basics
    {
      id: 26,
      title: "Import Module",
      world: "‚òÅÔ∏è Sky Temple",
      difficulty: "‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê",
      type: "fill_blank",
      question: "Import the math module.",
      template: "___ math",
      answer: "import",
      expectedOutput: "Module imported",
      hint: "Use import followed by module name.",
      points: 220,
      xpReward: 68,
      coins: 42,
      timeLimit: 85
    },
    {
      id: 27,
      title: "Use Math Function",
      world: "‚òÅÔ∏è Sky Temple",
      difficulty: "‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê",
      type: "fill_blank",
      question: "Print square root of 16 using math module.",
      template: "import math\\nprint(math.___(16))",
      answer: "sqrt",
      expectedOutput: "4.0",
      hint: "The square root function in math is sqrt().",
      points: 225,
      xpReward: 70,
      coins: 44,
      timeLimit: 85
    },
    {
      id: 28,
      title: "MCQ: Comment",
      world: "‚òÅÔ∏è Sky Temple",
      difficulty: "‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê",
      type: "multiple_choice",
      question: "Which is a correct comment in Python?",
      options: [
        "// This is a comment",
        "# This is a comment",
        "<!-- Comment -->",
        "/* Comment */"
      ],
      correctIndex: 1,
      expectedOutput: "No output, just comment",
      hint: "Python uses # for single-line comments.",
      points: 230,
      xpReward: 72,
      coins: 45,
      timeLimit: 90
    },
    {
      id: 29,
      title: "MCQ: Random Number",
      world: "‚òÅÔ∏è Sky Temple",
      difficulty: "‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê",
      type: "multiple_choice",
      question: "Generate a random number between 1 and 10:",
      options: [
        "random.randint(1,10)",
        "random(1,10)",
        "randint.random(1,10)",
        "rand(1,10)"
      ],
      correctIndex: 0,
      expectedOutput: "Random number between 1 and 10",
      hint: "Use randint from random module.",
      points: 235,
      xpReward: 74,
      coins: 46,
      timeLimit: 90
    },
    {
      id: 30,
      title: "MCQ: Correct Syntax",
      world: "‚òÅÔ∏è Sky Temple",
      difficulty: "‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê",
      type: "multiple_choice",
      question: "Which is the correct Python syntax?",
      options: [
        "for i in range(5) print(i)",
        "for i in range(5): print(i)",
        "for i to range(5): print(i)",
        "for i = 0; i<5; i++: print(i)"
      ],
      correctIndex: 1,
      expectedOutput: "0 1 2 3 4",
      hint: "Python uses colons to start code blocks.",
      points: 240,
      xpReward: 75,
      coins: 50,
      timeLimit: 90
    }
  ];